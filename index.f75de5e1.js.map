{"mappings":"AAAA;AAEA,MAAM,QAAQ;OAAI,SAAS,gBAAgB,CAAC;CAAM;AAElD,MAAM,QAAQ,CAAC;IACb,OAAO,WAAW,GAAG,OAAO,CAAC,SAAS;AACxC;AAEA,MAAM,WAAW,CAAC;IAChB,KAAK,IAAI,CAAC,CAAC,IAAI,KAAO,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM;IAExE,KAAK,OAAO,CAAC,CAAC;QACZ,SAAS,aAAa,CAAC,MAAM,qBAAqB,CAAC,aAAa;IAClE;AACF;AAEA,MAAM,eAAe,CAAC;IACpB,MAAM,SAAS,EAAE;IAEjB,KAAK,OAAO,CAAC,CAAC;QACZ,MAAM,CAAC,OAAO,MAAM,CAAC,GAAG;YACtB,MAAM,QAAQ,WAAW;YACzB,UAAU,QAAQ,OAAO,CAAC,QAAQ;YAClC,QAAQ,QAAQ,OAAO,CAAC,MAAM;YAC9B,KAAK,QAAQ,OAAO,CAAC,GAAG;QAC1B;IACF;IAEA,OAAO;AACT;AAEA,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst array = [...document.querySelectorAll('li')];\n\nconst toNum = (el) => {\n  return parseFloat(el.replace(/[$,]/g, ''));\n};\n\nconst sortList = (list) => {\n  list.sort((a1, a2) => toNum(a2.dataset.salary) - toNum(a1.dataset.salary));\n\n  list.forEach((element) => {\n    document.querySelector('ul').insertAdjacentElement('beforeend', element);\n  });\n};\n\nconst getEmployees = (list) => {\n  const result = [];\n\n  list.forEach((element) => {\n    result[result.length] = {\n      name: element.textContent,\n      position: element.dataset.position,\n      salary: element.dataset.salary,\n      age: element.dataset.age,\n    };\n  });\n\n  return result;\n};\n\nsortList(array);\ngetEmployees(array);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}