{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAeQ,EAfF,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAY,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEtC,EAAQ,SAAC,CAAf,EACE,OAAO,WAAW,EAAG,OAAO,CAAC,QAAS,IACxC,EAGE,AAsBO,EAtBF,IAAI,CAAC,SAAC,CAAA,CAAI,CAAf,EAAsB,OAAA,EAAM,EAAG,OAAO,CAAC,MAAM,EAAI,EAAM,EAAG,OAAO,CAAC,MAAM,C,GAExE,AAoBO,EApBF,OAAO,CAAC,SAAC,CAAd,EACE,SAAS,aAAa,CAAC,MAAM,qBAAqB,CAAC,YAAa,EAClE,GAIM,EAAS,EAAE,CAEjB,AAaW,EAbN,OAAO,CAAC,SAAC,CAAd,EACE,CAAM,CAAC,EAAO,MAAM,CAAC,CAAG,CACtB,KAAM,EAAQ,WAAW,CACzB,SAAU,EAAQ,OAAO,CAAC,QAAQ,CAClC,OAAQ,EAAQ,OAAO,CAAC,MAAM,CAC9B,IAAK,EAAQ,OAAO,CAAC,GAAG,AAC1B,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar array = _to_consumable_array(document.querySelectorAll(\"li\"));\nvar toNum = function(el) {\n    return parseFloat(el.replace(/[$,]/g, \"\"));\n};\nvar sortList = function(list) {\n    list.sort(function(a1, a2) {\n        return toNum(a2.dataset.salary) - toNum(a1.dataset.salary);\n    });\n    list.forEach(function(element) {\n        document.querySelector(\"ul\").insertAdjacentElement(\"beforeend\", element);\n    });\n};\nvar getEmployees = function(list) {\n    var result = [];\n    list.forEach(function(element) {\n        result[result.length] = {\n            name: element.textContent,\n            position: element.dataset.position,\n            salary: element.dataset.salary,\n            age: element.dataset.age\n        };\n    });\n    return result;\n};\nsortList(array);\ngetEmployees(array);\n\n//# sourceMappingURL=index.2d5b93e5.js.map\n","'use strict';\n\nconst array = [...document.querySelectorAll('li')];\n\nconst toNum = (el) => {\n  return parseFloat(el.replace(/[$,]/g, ''));\n};\n\nconst sortList = (list) => {\n  list.sort((a1, a2) => toNum(a2.dataset.salary) - toNum(a1.dataset.salary));\n\n  list.forEach((element) => {\n    document.querySelector('ul').insertAdjacentElement('beforeend', element);\n  });\n};\n\nconst getEmployees = (list) => {\n  const result = [];\n\n  list.forEach((element) => {\n    result[result.length] = {\n      name: element.textContent,\n      position: element.dataset.position,\n      salary: element.dataset.salary,\n      age: element.dataset.age,\n    };\n  });\n\n  return result;\n};\n\nsortList(array);\ngetEmployees(array);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","result","array","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","toNum","el","parseFloat","replace","list","sort","a1","a2","dataset","salary","forEach","element","querySelector","insertAdjacentElement","textContent","position","age"],"version":3,"file":"index.2d5b93e5.js.map"}